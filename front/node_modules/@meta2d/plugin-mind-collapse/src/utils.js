import { collapseChildPlugin } from "./core/CollapseChildPlugin";
import { isIntersection } from "@meta2d/plugin-mind-core";
export function error(message) {
    console.error(`plugin-mind-collapse: ${message}`);
}
export function debounce(func, wait) {
    let timeout;
    return function () {
        const context = this;
        const args = arguments;
        clearTimeout(timeout);
        timeout = setTimeout(function () {
            func.apply(context, args);
        }, wait);
    };
}
export function isCollapsePen(pen) {
    let root = meta2d.findOne(pen.mind?.rootId);
    return pen.mind?.type === 'node' && (collapseChildPlugin.target.includes(root.id) || collapseChildPlugin.target.includes(root.name) || isIntersection(collapseChildPlugin.target, root.tags));
}
//# sourceMappingURL=utils.js.map